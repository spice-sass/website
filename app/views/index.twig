{% extends '../layouts/main.twig' %}
{% block title %}
	<title>{{siteTitle}}</title>
{% endblock %}

{% block content %}
  	<section class="fullscreen stack" id="intro-pane">
		
		<div class="centre-y text-centre">
			<div id="main-logo">
			</div>
			<h2 id="strap" class="roboto-slab slide-in-up">The sass library for tasty web interfaces</h2>
			<a href="#installation" class="button flat-secondary block-icon-download slide-in-right">Installation</a>
			<a href="/documentation" class="button flat-primary block-icon-open-book slide-in-left">View Docs</a>
			<p class="slide-in-up">Version {{version}}</p>
		</div>
		
	</section>

{# 	<section class="fullscreen stack" id="preview">
		
	</section> #}

	<section class="stack" id="features">
		
		<div class="container">

			<h2><span>Features</span></h2>
			
			<div class="grid-row">
				
				<div class="gridded-list feature">

					<h3>Grid</h3>
					<p>A powerful &amp; flexible grid system allows you to generate a fluid, class based grid or apply widths to individual selectors with just a few lines of sass.</p>	

				</div>
				<div class="gridded-list feature">

					<h3>Layout</h3>
					<p>Quickly create complex layouts with spice mixins for sidebars, sticky headers, masonry grid layouts and much more.</p>

				</div>
				<div class="gridded-list feature">

					<h3>Animations</h3>
					<p>Complex ui interactions with css3 keyframes couldnâ€™t be simpler with spice animation mixins and presets that support css3 transforms.</p>

				</div>
				<div class="gridded-list feature">

					<h3>Flat UI</h3>
					<p>Fashionable flat ui interfaces can be created with minimal effort using spice mixins for buttons, tab systems, form elements and much more.</p>

				</div>

			</div>

		</div>

	</section>

	<section class="stack" id="installation">
			
		<div class="container">

			<div class="grid-row">

				<div class="grid-col-8 grid-col-indent-2">

					<h2><span>Installation &amp; Usage</span></h2>
					<p>Spice is available for download via npm or bower</p>

					<h5>npm</h5>
					<p class="code-demo">
						npm install spice-sass
					</p>

					<h5>Bower</h5>
					<p class="code-demo">
						bower install spice-sass
					</p>

					<p>
						Once installed you can import spice into your main scss file.
						<strong>Note:</strong> the import must be relative to your 
						node_modules/bower_components folder dependent on your chosen
						method of installation. E.g. for a node installation:
					</p>

					<p class="code-demo">
						<span class="import">@import</span>
						<span class="string"> "../node_modules/spice-sass/src/spice";</span>
					</p>

				</div>

			</div>

		</div>

	</section>
	{% include '../components/footer/footer.twig' %}
{% endblock %}
{% block footerScript %}
	<script src="js/react.min.js"></script>
	<script src="js/home.js"></script>
{% endblock %}


